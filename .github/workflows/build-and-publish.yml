name: Build and Publish Ansible EE

on:
  push:
    branches:
      - main
      - develop
    tags:
      - 'v*'
  pull_request:
    branches:
      - main
      - develop
  workflow_dispatch:
    inputs:
      push_image:
        description: 'Push image to registry'
        required: false
        default: true
        type: boolean

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build-and-publish:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      security-events: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install ansible-builder
        run: |
          python -m pip install --upgrade pip
          pip install ansible-builder

      - name: Log in to GitHub Container Registry
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
            type=raw,value=latest,enable={{is_default_branch}}
            type=sha,prefix={{branch}}-

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build Execution Environment
        run: |
          ansible-builder build \
            --tag ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:build-${{ github.run_number }} \
            --container-runtime docker \
            --verbosity 2

      - name: Test Execution Environment
        run: |
          # Test basic functionality
          docker run --rm ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:build-${{ github.run_number }} ansible --version
          docker run --rm ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:build-${{ github.run_number }} ansible-galaxy --version
          
          # Test that collections are available (if any are specified)
          docker run --rm ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:build-${{ github.run_number }} ansible-galaxy collection list

      - name: Scan image for vulnerabilities
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:build-${{ github.run_number }}
          format: 'sarif'
          output: 'trivy-results.sarif'

      - name: Upload Trivy scan results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v3
        if: always()
        with:
          sarif_file: 'trivy-results.sarif'

      - name: Tag and push images to GHCR
        if: github.event_name != 'pull_request' && (github.event_name != 'workflow_dispatch' || inputs.push_image)
        run: |
          # Tag the built image with all metadata tags
          IFS=$'\n'
          for tag in ${{ steps.meta.outputs.tags }}; do
            echo "Tagging: $tag"
            docker tag ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:build-${{ github.run_number }} "$tag"
            echo "Pushing: $tag"
            docker push "$tag"
          done
          
          echo "Successfully pushed to GitHub Container Registry:"
          echo "Repository: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}"
          echo "Available at: https://github.com/${{ github.repository }}/pkgs/container/$(basename ${{ env.IMAGE_NAME }})"

      - name: Generate SBOM
        if: github.event_name != 'pull_request'
        uses: anchore/sbom-action@v0
        with:
          image: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:build-${{ github.run_number }}
          format: spdx-json
          output-file: sbom.spdx.json

      - name: Upload SBOM as artifact
        if: github.event_name != 'pull_request'
        uses: actions/upload-artifact@v4
        with:
          name: sbom
          path: sbom.spdx.json

      - name: Clean up temporary image
        if: always()
        run: |
          docker rmi ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:build-${{ github.run_number }} || true
